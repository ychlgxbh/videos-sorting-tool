/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package youtubetrender;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.UIManager;

/**
 *
 * @author lewi0146
 */
public class YouTubeTrenderFrame extends javax.swing.JFrame {

    List<YouTubeVideo> list;

    DefaultListModel<YouTubeVideo> vmodel = new DefaultListModel();
    DefaultListModel<YouTubeWordItem> wmodel = new DefaultListModel();

    //List<WordItem> wi;
    /**
     * Creates new form YouTubeTrenderFrame
     */
    public YouTubeTrenderFrame() {
        initComponents();
        this.jListVideo.setModel(vmodel);
        this.jListWordItem.setModel(wmodel);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jTextFieldDataFile = new javax.swing.JTextField();
        jButtonParse = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTextFieldChannel = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jTextFieldDate = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jTextFieldTitle = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextAreaDescription = new javax.swing.JTextArea();
        jLabel5 = new javax.swing.JLabel();
        jTextFieldViewCount = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jListVideo = new javax.swing.JList<>();
        jScrollPane3 = new javax.swing.JScrollPane();
        jListWordItem = new javax.swing.JList<>();
        jPanel3 = new javax.swing.JPanel();
        jRadioButtonDescription = new javax.swing.JRadioButton();
        jRadioButtonChannel = new javax.swing.JRadioButton();
        jRadioButtonDate = new javax.swing.JRadioButton();
        jRadioButtonView = new javax.swing.JRadioButton();
        jButtonIndex = new javax.swing.JButton();
        jButtonIndexMeaningful = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTextFieldDataFile.setText("youtubedata_15_50.json");

        jButtonParse.setText("Parse");
        jButtonParse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonParseActionPerformed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Video Details"));

        jLabel1.setText("Channel");

        jTextFieldChannel.setEditable(false);

        jLabel2.setText("Date Posted");

        jTextFieldDate.setEditable(false);

        jLabel3.setText("Title");

        jTextFieldTitle.setEditable(false);

        jLabel4.setText("Description");

        jTextAreaDescription.setEditable(false);
        jTextAreaDescription.setColumns(20);
        jTextAreaDescription.setLineWrap(true);
        jTextAreaDescription.setRows(5);
        jTextAreaDescription.setWrapStyleWord(true);
        jScrollPane2.setViewportView(jTextAreaDescription);

        jLabel5.setText("View Count");

        jTextFieldViewCount.setEditable(false);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1)
                            .addComponent(jLabel3)
                            .addComponent(jLabel5))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextFieldChannel)
                            .addComponent(jTextFieldDate)
                            .addComponent(jTextFieldTitle)
                            .addComponent(jTextFieldViewCount)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTextFieldChannel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTextFieldDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jTextFieldTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jTextFieldViewCount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 54, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Videos"));

        jListVideo.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jListVideoValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(jListVideo);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );

        jListWordItem.setBorder(javax.swing.BorderFactory.createTitledBorder("Top Words"));
        jScrollPane3.setViewportView(jListWordItem);

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Sort Criteria"));

        buttonGroup1.add(jRadioButtonDescription);
        jRadioButtonDescription.setText("Description");
        jRadioButtonDescription.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonDescriptionActionPerformed(evt);
            }
        });

        buttonGroup1.add(jRadioButtonChannel);
        jRadioButtonChannel.setText("Channel");
        jRadioButtonChannel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonChannelActionPerformed(evt);
            }
        });

        buttonGroup1.add(jRadioButtonDate);
        jRadioButtonDate.setText("Date");
        jRadioButtonDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonDateActionPerformed(evt);
            }
        });

        buttonGroup1.add(jRadioButtonView);
        jRadioButtonView.setText("View");
        jRadioButtonView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonViewActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jRadioButtonChannel)
                .addGap(107, 107, 107)
                .addComponent(jRadioButtonDate)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jRadioButtonView)
                .addGap(81, 81, 81)
                .addComponent(jRadioButtonDescription)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRadioButtonChannel)
                    .addComponent(jRadioButtonDate)
                    .addComponent(jRadioButtonView)
                    .addComponent(jRadioButtonDescription))
                .addContainerGap())
        );

        jButtonIndex.setText("Index(All words)");
        jButtonIndex.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonIndexActionPerformed(evt);
            }
        });

        jButtonIndexMeaningful.setText("Index(Meaningful words only)");
        jButtonIndexMeaningful.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonIndexMeaningfulActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(404, 404, 404)
                                .addComponent(jButtonIndexMeaningful, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jTextFieldDataFile, javax.swing.GroupLayout.PREFERRED_SIZE, 390, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonParse, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonIndex, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButtonParse, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jTextFieldDataFile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButtonIndex, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 303, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButtonIndexMeaningful, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonParseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonParseActionPerformed

        String dataFile = this.jTextFieldDataFile.getText();

        YouTubeDataParser parser = new YouTubeDataParser();
        list = null;
        try {
            // load from the data directory
            list = parser.parse("data" + File.separator + dataFile);

        } catch (YouTubeDataParserException ex) {
            Logger.getLogger(YouTubeTrenderFrame.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, ex.getMessage());
            // TODO: maybe notify the user with a GUI that something bad has happened!
        }

        if (list != null) {
            // YouTube data has been parsed successfully!
            for (int i = 0; i < list.size(); i++) {
                vmodel.addElement(list.get(i));
            }

            // TODO: connect the list to the GUI
        }
    }//GEN-LAST:event_jButtonParseActionPerformed

    private void jListVideoValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jListVideoValueChanged
        YouTubeVideo ytv = jListVideo.getSelectedValue();
        if (ytv != null) {
            this.jTextFieldChannel.setText(ytv.getChannel());
            this.jTextFieldDate.setText(ytv.getDate());
            this.jTextFieldTitle.setText(ytv.getTitle());
            this.jTextFieldViewCount.setText(ytv.getViewCount() + "");
            this.jTextAreaDescription.setText(ytv.getDescription());
        }
    }//GEN-LAST:event_jListVideoValueChanged

    private void jRadioButtonDescriptionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonDescriptionActionPerformed
        YouTubeVideoDescriptionComparator cc = new YouTubeVideoDescriptionComparator();
        try {
            Collections.sort(list, cc);
            vmodel.removeAllElements();
            for (int i = 0; i < list.size(); i++) {
                vmodel.addElement(list.get(i));
    }//GEN-LAST:event_jRadioButtonDescriptionActionPerformed
        } catch (NullPointerException e) {
            
            JOptionPane.showMessageDialog(null, "Please parse a file first before sorting");
        }
    }
    private void jRadioButtonChannelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonChannelActionPerformed
        try {
            YouTubeVideoChannelComparator cc = new YouTubeVideoChannelComparator();
            Collections.sort(list, cc);
            vmodel.removeAllElements();
            for (int i = 0; i < list.size(); i++) {
                vmodel.addElement(list.get(i));
    }//GEN-LAST:event_jRadioButtonChannelActionPerformed
        } catch (NullPointerException e) {
            
            JOptionPane.showMessageDialog(null, "Please parse a file first before sorting");
        }
    }
    private void jRadioButtonDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonDateActionPerformed
        try {
            YouTubeVideoDateComparator cc = new YouTubeVideoDateComparator();
            Collections.sort(list, cc);
            vmodel.removeAllElements();
            for (int i = 0; i < list.size(); i++) {
                vmodel.addElement(list.get(i));
            }
        } catch (NullPointerException e) {
            
            JOptionPane.showMessageDialog(null, "Please parse a file first before sorting");
        }

    }//GEN-LAST:event_jRadioButtonDateActionPerformed

    private void jRadioButtonViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonViewActionPerformed
        try {
            YouTubeVideoViewComparator cc = new YouTubeVideoViewComparator();
            Collections.sort(list, cc);
            vmodel.removeAllElements();
            for (int i = 0; i < list.size(); i++) {
                vmodel.addElement(list.get(i));
            }
        } catch (NullPointerException e) {
            JOptionPane.showMessageDialog(null, "Please parse a file first before sorting");
        }
    }//GEN-LAST:event_jRadioButtonViewActionPerformed

    private void jButtonIndexActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonIndexActionPerformed
        try {
            YouTubeVideoIndexer ytvi = new YouTubeVideoIndexer(list);
            ytvi.index(false);
            List<YouTubeWordItem> temp = new ArrayList<YouTubeWordItem>();
            temp = ytvi.getSortedYouTubeWordItems();
            wmodel.removeAllElements();
            for (int i = 0; i < temp.size(); i++) {
                wmodel.addElement(temp.get(i));
            }
        } catch (NullPointerException e) {
            JOptionPane.showMessageDialog(null, "Please parse a file first before indexing");
        }
    }//GEN-LAST:event_jButtonIndexActionPerformed

    private void jButtonIndexMeaningfulActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonIndexMeaningfulActionPerformed
        try {
            YouTubeVideoIndexer ytvi = new YouTubeVideoIndexer(list);
            ytvi.index(true);
            List<YouTubeWordItem> temp = new ArrayList<YouTubeWordItem>();
            temp = ytvi.getSortedYouTubeWordItems();
            wmodel.removeAllElements();
            for (int i = 0; i < temp.size(); i++) {
                wmodel.addElement(temp.get(i));
            }
        } catch (NullPointerException e) {
            JOptionPane.showMessageDialog(null, "Please parse a file first before indexing");
        }
    }//GEN-LAST:event_jButtonIndexMeaningfulActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            // Set System L&F
            UIManager.setLookAndFeel(
                    UIManager.getSystemLookAndFeelClassName());

        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(YouTubeTrenderFrame.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(YouTubeTrenderFrame.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(YouTubeTrenderFrame.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(YouTubeTrenderFrame.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new YouTubeTrenderFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JButton jButtonIndex;
    private javax.swing.JButton jButtonIndexMeaningful;
    private javax.swing.JButton jButtonParse;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JList<YouTubeVideo> jListVideo;
    private javax.swing.JList<YouTubeWordItem> jListWordItem;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JRadioButton jRadioButtonChannel;
    private javax.swing.JRadioButton jRadioButtonDate;
    private javax.swing.JRadioButton jRadioButtonDescription;
    private javax.swing.JRadioButton jRadioButtonView;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextArea jTextAreaDescription;
    private javax.swing.JTextField jTextFieldChannel;
    private javax.swing.JTextField jTextFieldDataFile;
    private javax.swing.JTextField jTextFieldDate;
    private javax.swing.JTextField jTextFieldTitle;
    private javax.swing.JTextField jTextFieldViewCount;
    // End of variables declaration//GEN-END:variables
}
